openapi: 3.0.3
info:
  title: Request Manager
  description: Fictitious video trimmer system as part of the evaluation work for the Postgraduate course in Software Architecture at FIAP. Request Manager service main objective is to receive the request to process a video file and manage the request status.
  version: 1.0.0
externalDocs:
  description: Find out more about the project
  url: https://github.com/perisatto/request-manager
servers:
  - url: /request-manager/v1
tags:
  - name: requests
    description: Manage the requests
paths:
  /users/{userId}/requests:
    post:
      tags:
        - requests
      summary: Create a new request
      description: Create a new request to process a video file to create a image of each frame from a specified interval.
      operationId: createRequest
      parameters: 
        - name: userId
          description: Unique key that identifies the user owner of the request. When informed "me" value, the user id is extracted from bearer token. 
          in: path
          required: true
          example: johncena
          schema:
            type: string
      requestBody:
        description: Operation attributes request.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Request'
              required:
                - interval
                - videoFile
      responses:
        '201':
          description: Request created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          headers: 
            Location:
              description: Location of the new request processing
              schema:
                type: string
                example: /users/johncena/requests/62c7e909-2fac-40f1-b8c1-89a5d56a9c3c
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Bad request
                  detail: Malformed request or unknown fields
                  instance: /users/johncena/requests
        '406':
            description: Not acceptable
        '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unsupported Media Type
                  detail: Content-Type 'text/plain' is not supported
                  instance: /users/johncena/requests
        '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unprocessable entity
                  detail: Invalid video file
                  instance: /users/johncena/requests
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Internal Server Error
                  detail: A error ocurred during the operation. Please refer to application log for details
                  instance: /users/johncena/requests               
      security: 
        - authorization: []
    get:
      tags:
        - requests
      summary: List requests
      description: List all requests using pagination criteria
      operationId: listRequests
      parameters: 
        - name: userId
          description: Unique key that identifies the user owner of the request. When informed "me" value, the user id is extracted from bearer token. 
          in: path
          required: true
          example: johncena
          schema:
            type: string      
        - name: _page
          description: Defines the page number that will be retrieved
          in: query
          required: true
          example: 1
          schema:
              $ref: '#/components/schemas/PageParameter'
        - name: _size
          description: Defines the page size (rows number) that will be retrieved
          in: query
          required: true
          example: 50
          schema:
              $ref: '#/components/schemas/SizeParameter' 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageTemplate'
                  - type: object
                    properties:
                      _content:
                        description: Itens retrieved. If there is no item the list will be empty
                        type: array
                        items:
                          allOf:
                          - $ref: '#/components/schemas/Request'              
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Bad request
                  detail: Malformed request or unknown fields
                  instance: /users/johncena/requests
        '406':
            description: Not acceptable
        '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unsupported Media Type
                  detail: Content-Type 'text/plain' is not supported
                  instance: /users/johncena/requests
        '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unprocessable entity
                  detail: Invalid _size parameter
                  instance: /users/johncena/requests
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Internal Server Error
                  detail: A error ocurred during the operation. Please refer to application log for details
                  instance: /users/johncena/requests                          
      security: 
        - authorization: []
  /users/{userId}/requests/{requestId}:
    get:
      tags:
        - requests
      summary: Get request data
      description: Retrieve a specific request data according with the request id.
      operationId: getRequest
      parameters:
        - name: userId
          description: Unique key that identifies the user owner of the request. When informed "me" value, the user id is extracted from bearer token. 
          in: path
          required: true
          example: johncena
          schema:
            type: string
        - name: requestId
          description: Unique key that identifies a request
          in: path
          required: true
          example: 6af8d995-edde-4b69-aaf8-c5bfd02c85ab
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Bad request
                  detail: Malformed request or unknown fields
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '406':
            description: Not acceptable
        '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unsupported Media Type
                  detail: Content-Type 'text/plain' is not supported
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unprocessable entity
                  detail: Invalid _size parameter
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Internal Server Error
                  detail: A error ocurred during the operation. Please refer to application log for details
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
      security: 
        - authorization: []
    patch:
      tags:
        - requests
      summary: Update request data
      description: Updates a specific request data according with the request id.
      operationId: updateRequest
      parameters:
        - name: userId
          description: Unique key that identifies the user owner of the request. When informed "me" value, the user id is extracted from bearer token. 
          in: path
          required: true
          example: johncena
          schema:
            type: string
        - name: requestId
          description: Unique key that identifies a request
          in: path
          required: true
          example: 6af8d995-edde-4b69-aaf8-c5bfd02c85ab
          schema:
            type: string
            format: uuid
      requestBody:
        description: Updates a customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'            
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Bad request
                  detail: Malformed request or unknown fields
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '406':
            description: Not acceptable
        '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unsupported Media Type
                  detail: Content-Type 'text/plain' is not supported
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unprocessable entity
                  detail: Invalid _size parameter
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Internal Server Error
                  detail: A error ocurred during the operation. Please refer to application log for details
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
      security: 
        - authorization: []
    delete:
      tags:
        - requests
      summary: Delete request data
      description: Delete a specific request data according with the request id.
      operationId: deleteRequest
      parameters:
        - name: userId
          description: Unique key that identifies the user owner of the request. When informed "me" value, the user id is extracted from bearer token. 
          in: path
          required: true
          example: johncena
          schema:
            type: string
        - name: requestId
          description: Unique key that identifies a request
          in: path
          required: true
          example: 6af8d995-edde-4b69-aaf8-c5bfd02c85ab
          schema:
            type: string
            format: uuid      
      responses:
        '204':
          description: No content            
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Bad request
                  detail: Malformed request or unknown fields
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '406':
            description: Not acceptable
        '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unsupported Media Type
                  detail: Content-Type 'text/plain' is not supported
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Unprocessable entity
                  detail: Invalid _size parameter
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorTemplate'
                example:
                  type: about:blank
                  tittle: Internal Server Error
                  detail: A error ocurred during the operation. Please refer to application log for details
                  instance: /users/johncena/requests/6af8d995-edde-4b69-aaf8-c5bfd02c85ab
      security: 
        - authorization: []
components:
  schemas:
    TypeIdRequest:
      type: string
      description: Unique key that identifies a request
      format: uuid
    RequestStatus:
      type: string
      description: identifies the phase of request processing
      enum:
        - PENDING
        - PROCESSING
        - ERROR
        - COMPLETED
    Request:
      type: object
      description: A request to process a video file to extract image files from each frame of a duration specified.
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/TypeIdRequest'
          readOnly: true
        interval:
          description: Value in seconds of each frame to be extracted from the video file.
          type: integer
          format: int64
          minimum: 10
          example: 10
        videoFile:
          description: Raw video file intended to process.
          type: string
          format: base64
          example: iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=
          writeOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/RequestStatus'
          readOnly: true
    PageParameter:
      type: integer
      minimum: 1
    SizeParameter:
      type: integer
      minimum: 1
      maximum: 50
    PageTemplate:
      type: object
      properties:
          _page:
              type: integer
              description: Actual page retrieved
              example: 1
          _size:
              type: integer
              description: Page size (rows number) requested
              example: 50
          _pageElements:
              type: integer
              description: Actual page size (rows number) retrieved
              example: 1          
    ErrorTemplate:
      description: Problem detail objects acording to [RFC9457](https://www.rfc-editor.org/rfc/rfc9457)
      type: object
      properties:
        type:
          type: string
          description: Containing a URI reference that identifies the problem type. When this member is not present, its value is assumed to be "about:blank".
          example: https://example.net/validation-error
        tittle:
          type: string
          description: Contain a short, human-readable summary of the problem type.
          example: Your request is not valid
        detail:
            type: string
            description: A human-readable explanation specific to this occurrence of the problem.
            example: Customer name must be not greater than 100 characters.
        instance: 
            type: string
            description: String containing a URI reference that identifies the specific occurrence of the problem
            example: /customers/1
  securitySchemes:
    authorization:
      type: http
      scheme: bearer