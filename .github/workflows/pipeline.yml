name: pipeline
run-name: ${{ github.actor }} is running a new build.

on: [push, pull_request, workflow_dispatch]

jobs:       
  Unit-Tests:
    if: startsWith(github.ref_name, 'master')
        || startsWith(github.ref_name, 'release/')  
        || startsWith(github.ref_name, 'develop')
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file 
      
      - run: mvn test

      - name: Genarate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2

      - name: Log coverage percentage
        run: |
            echo "Coverage = ${{ steps.jacoco.outputs.coverage }}"
            echo "Branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
            
  Build:
    needs: Unit-Tests
    if: startsWith(github.ref_name, 'master')
        || startsWith(github.ref_name, 'release/')  
        || startsWith(github.ref_name, 'develop')    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file 
          
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  Publish:
    needs: Build
    if: startsWith(github.ref_name, 'master')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Publish"
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t rperisatto/menuguru-api_service:latest .

      - name: Push Docker image
        run: |
          docker push rperisatto/menuguru-api_service:latest

  Deploy-PRD:
    if: startsWith(github.ref_name, 'master')
    needs: Publish
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploy Production"      
